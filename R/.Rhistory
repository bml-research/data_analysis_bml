drop_na()
#artiod_df <- na.omit(artiod_df) # to remove rows with NA values
formatted_table(head(artiod_df))
artiod_df <- df %>%
filter(Order == "Artiodactyla") %>%
arrange(`Common name`) %>%
select(Order, Family, `Common name`, `Maximum longevity (yrs)`, `Adult weight (g)`, `Birth weight (g)`) %>%
mutate(`Maximum longevity (yrs)` = as.numeric(`Maximum longevity (yrs)`)) %>%
mutate(`Adult weight (g)` = as.numeric(`Adult weight (g)`)) %>%
mutate(`Birth weight (g)` = as.numeric(`Birth weight (g)`)) %>%
drop_na()
formatted_table(head(artiod_df))
p <- artiod_df %>% ggplot(aes(x = `Family`, y = `Maximum longevity (yrs)`)) +
geom_boxplot() +
labs(title="Boxplot showing maximum life span for different orders in mammals") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_artiod <- artiod_df %>%
pivot_longer(c(`Birth weight (g)`, `Adult weight (g)`), names_to = "Weight type", values_to = "Weight (g)")
formatted_table(head(tidy_artiod))
p <- tidy_artiod %>%
ggplot(aes(x = `Family`, y = `Weight (g)`, fill = `Weight type`)) +
geom_boxplot() +
scale_y_log10() +
labs(title="Box plot showing the birth and adult weights for different orders in Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_artiod <- tidy_artiod %>%
mutate(Weight type = factor(`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)")))
#tidy_artiod$`Weight type` <- factor(tidy_artiod$`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)"))
#levels(tidy_artiod$`Weight type`)
tidy_artiod <- tidy_artiod %>%
mutate(`Weight type` = factor(`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)")))
#tidy_artiod$`Weight type` <- factor(tidy_artiod$`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)"))
#levels(tidy_artiod$`Weight type`)
tidy_artiod <- tidy_artiod %>%
mutate(`Weight type` = factor(`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)")))
formatted_table(head(tidy_artiod))
#tidy_artiod$`Weight type` <- factor(tidy_artiod$`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)"))
#levels(tidy_artiod$`Weight type`)
p <- tidy_artiod %>%
ggplot(aes(x = `Family`, y = `Weight (g)`, fill = `Weight type`)) +
geom_boxplot() +
scale_y_log10() +
labs(title="Box plot showing the birth and adult weights for different orders in Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
artiod_df <- artiod_df %>%
filter(Family != "Antilocapridae")
#artiod_df[artiod_df$Family != "Antilocapridae", ]
p <- ggplot(artiod_df, aes(x = `Family`, y = `Maximum longevity (yrs)`)) +
geom_violin() +
labs(title="Maximum life span of Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
artiod_df <- artiod_df %>%
filter(Family != "Antilocapridae")
p <- artiod_df %>%
ggplot(aes(x = `Family`, y = `Maximum longevity (yrs)`)) +
geom_violin() +
labs(title="Maximum life span of Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
library(readxl)
file_path <- "./files_12_data_visualization/file_03_mouse_weight_data.xlsx"
mouse_weight <- read_excel(file_path)
formatted_table(head(mouse_weight))
tidy_mouse_weight <- mouse_weight %>%
pivot_longer(c(`Wild-type`, `OB/OB`, `DB/DB`), names_to = "Mouse strain", values_to = "Weight (g)")
formatted_table(head(tidy_mouse_weight))
p <- tidy_mouse_weight %>%
ggplot(aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line() +
labs(title="Weights of different genotypes of mice")
p
p <- tidy_mouse_weight %>%
ggplot(aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line(aes(linetype = `Mouse strain`)) +
labs(title="Weights of different genotypes of mice")
p
p <- tidy_mouse_weight %>%
ggplot(aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line(aes(color = `Mouse strain`)) +
labs(title="Weights of different genotypes of mice")
p
chickwts_diet1 <- ChickWeight %>%
filter(Diet == 1)
formatted_table(head(chickwts_diet1))
p <- chickwts_diet1 %>%
ggplot(aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weight")
p
p <- chickwts_diet1 %>%
ggplot(aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth") +
geom_smooth(method="lm")
p
library(readxl)
file_path <- "./files_12_data_visualization/file04_bubble_chart.xlsx"
bubble_data <- read_excel(file_path)
formatted_table(head(bubble_data))
p <- bubble_data %>%
ggplot(aes(x = `Analysis time (min)`, y = `Protein concentration (mg/ml)`)) +
geom_point(aes(color = Method, size = `Number of Analyses per day`), alpha = 0.5) +
scale_size_area(max_size = 10)
p
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(pillar)
formatted_table <- function(df) {
col_types <- sapply(df, pillar::type_sum)
new_col_names <- paste0(names(df), "<br>", "<span style='font-weight: normal;'>", col_types, "</span>")
kbl(df,
col.names = new_col_names,
escape = FALSE, # This is crucial to allow the <br> tag to work
format = "html" # Ensure HTML format, although often auto-detected
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_12_data_visualization/file01_anage_data.csv"
df <- read.csv2(file_path, check.names = F)
df <- df %>% mutate(`Adult weight (g)` = as.numeric(`Adult weight (g)`)) %>%
mutate(`Birth weight (g)` = as.numeric(`Birth weight (g)`))
formatted_table(head(df))
summ_data <- df %>%
filter(Family == "Felidae") %>%
arrange(`Common name`) %>%
select(Family, `Common name`, `Birth weight (g)`, `Adult weight (g)`)
formatted_table(head(summ_data))
summ_data <- summ_data %>%
drop_na()
formatted_table(head(summ_data))
barplot(summ_data$`Birth weight (g)`,
ylab = "Birth weight (g)",
ylim = c(0, max(summ_data$`Birth weight (g)` + 100)),
names = summ_data$`Common name`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Birth weight for different cat species")
p <- summ_data %>%
ggplot(aes(x = `Common name`, y = `Birth weight (g)`)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Birth weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data <- summ_data %>%
pivot_longer(c(`Birth weight (g)`, `Adult weight (g)`), names_to = "Weight type", values_to = "Weight (g)")
formatted_table(head(tidy_summ_data))
p <- tidy_summ_data %>%
ggplot(aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="dodge") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species", y = "Weight (g)") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- tidy_summ_data %>%
ggplot(aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="stack") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- tidy_summ_data %>%
ggplot(aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="fill") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data <- tidy_summ_data %>%
mutate(`Weight type` = factor(`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)")))
formatted_table(head(tidy_summ_data))
p <- tidy_summ_data %>%
ggplot(aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="dodge") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- tidy_summ_data %>%
ggplot(aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="stack") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- tidy_summ_data %>%
ggplot(aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="fill") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
big_cats <- c("Lion", "Tiger", "Jaguar", "Cougar", "Leopard", "Cheetah", "Snow leopard")
df_big_cats <- df %>%
filter(`Common name` %in% big_cats)
formatted_table(df_big_cats)
p <- df_big_cats %>%
ggplot(aes(x = "", y = `Adult weight (g)`, fill = `Common name`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Adult weight for different cat species") +
theme_void() # remove background, grid, numeric labels
p
file_path <- "./files_12_data_visualization/file02_radar_data.csv"
rest_data <- read.csv2(file_path, check.names = F)
formatted_table(rest_data)
trans_matrix <- t(rest_data)
trans_matrix
trans_tibble <- tibble(data.frame(trans_matrix))
formatted_table((trans_tibble))
colnames(trans_tibble) <- trans_tibble[1, ] # first row will be column names
trans_tibble <- trans_tibble[-1, ] # delete first row
trans_tibble <- trans_tibble %>%
mutate(across(everything(), as.numeric)) %>% # make all columns numeric
mutate(Sample = c("Sample 1", "Sample 2", "Sample 3"), .before=1)
formatted_table(trans_tibble)
rest_data_scaled <- trans_tibble[, -1]/1000
formatted_table(rest_data_scaled)
first_col <- trans_tibble[, 1]
formatted_table(first_col)
rest_data <- cbind(first_col, rest_data_scaled)
formatted_table(rest_data)
library(ggradar)
p <- rest_data %>%
ggradar(legend.text.size = 8, values.radar = c("0", "0.5", "1.0"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Different protein quantifications methods compared") +
theme(plot.title = element_text(size = 14, ))
p
file_path <- "./files_12_data_visualization/file01_anage_data.csv"
df <- read.csv2(file_path, check.names = F)
formatted_table(head(df))
artiod_df <- df %>%
filter(Order == "Artiodactyla") %>%
arrange(`Common name`) %>%
select(Order, Family, `Common name`, `Maximum longevity (yrs)`, `Adult weight (g)`, `Birth weight (g)`) %>%
mutate(`Maximum longevity (yrs)` = as.numeric(`Maximum longevity (yrs)`)) %>%
mutate(`Adult weight (g)` = as.numeric(`Adult weight (g)`)) %>%
mutate(`Birth weight (g)` = as.numeric(`Birth weight (g)`)) %>%
drop_na()
formatted_table(head(artiod_df))
p <- artiod_df %>% ggplot(aes(x = `Family`, y = `Maximum longevity (yrs)`)) +
geom_boxplot() +
labs(title="Boxplot showing maximum life span for different orders in mammals") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_artiod <- artiod_df %>%
pivot_longer(c(`Birth weight (g)`, `Adult weight (g)`), names_to = "Weight type", values_to = "Weight (g)")
formatted_table(head(tidy_artiod))
p <- tidy_artiod %>%
ggplot(aes(x = `Family`, y = `Weight (g)`, fill = `Weight type`)) +
geom_boxplot() +
scale_y_log10() +
labs(title="Box plot showing the birth and adult weights for different orders in Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_artiod <- tidy_artiod %>%
mutate(`Weight type` = factor(`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)")))
formatted_table(head(tidy_artiod))
p <- tidy_artiod %>%
ggplot(aes(x = `Family`, y = `Weight (g)`, fill = `Weight type`)) +
geom_boxplot() +
scale_y_log10() +
labs(title="Box plot showing the birth and adult weights for different orders in Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
artiod_df <- artiod_df %>%
filter(Family != "Antilocapridae")
p <- artiod_df %>%
ggplot(aes(x = `Family`, y = `Maximum longevity (yrs)`)) +
geom_violin() +
labs(title="Maximum life span of Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
library(readxl)
file_path <- "./files_12_data_visualization/file_03_mouse_weight_data.xlsx"
mouse_weight <- read_excel(file_path)
formatted_table(head(mouse_weight))
tidy_mouse_weight <- mouse_weight %>%
pivot_longer(c(`Wild-type`, `OB/OB`, `DB/DB`), names_to = "Mouse strain", values_to = "Weight (g)")
formatted_table(head(tidy_mouse_weight))
p <- tidy_mouse_weight %>%
ggplot(aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line() +
labs(title="Weights of different genotypes of mice")
p
p <- tidy_mouse_weight %>%
ggplot(aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line(aes(linetype = `Mouse strain`)) +
labs(title="Weights of different genotypes of mice")
p
p <- tidy_mouse_weight %>%
ggplot(aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line(aes(color = `Mouse strain`)) +
labs(title="Weights of different genotypes of mice")
p
chickwts_diet1 <- ChickWeight %>%
filter(Diet == 1)
formatted_table(head(chickwts_diet1))
p <- chickwts_diet1 %>%
ggplot(aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weight")
p
p <- chickwts_diet1 %>%
ggplot(aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth") +
geom_smooth(method="lm")
p
library(readxl)
file_path <- "./files_12_data_visualization/file04_bubble_chart.xlsx"
bubble_data <- read_excel(file_path)
formatted_table(head(bubble_data))
p <- bubble_data %>%
ggplot(aes(x = `Analysis time (min)`, y = `Protein concentration (mg/ml)`)) +
geom_point(aes(color = Method, size = `Number of Analyses per day`), alpha = 0.5) +
scale_size_area(max_size = 10)
p
library(tidyverse)
folder <- "data"
file_name <- "nutrients_csvfile.csv"
file_path <- paste0("../", folder, "/", file_name) # ../ means one directory higher
df1 <- read_csv(file_path)
head(df1)
head(df1$Calories)
df1[df1$Calories == "8-44", ]
sum(is.na(df1$Calories))
df1[is.na(df1$Calories), ]
df2 <- df1 %>% filter(!Calories == "8-44")
df2[df2$Calories == "8-44", ]
df3 <- df2 %>% filter(!Food == "Frozen peas")
df3[df3$Food == "Frozen peas", ]
df4 <- df3 %>% mutate(Calories = as.numeric(gsub(",", "", Calories))) #gsub will remove the comma's.
head(df4)
df5 <- df4 %>%
group_by(Category) %>%
select(4) %>%
summarize_each(funs(mean))
df5
df5 <- df4 %>%
group_by(Category) %>%
summarise(across(Calories, mean))
df5
p <- ggplot(data = df5, aes(x = Category, y = Calories)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Average of calories from different categories") +
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5))
p
p <- ggplot(data=df4, aes(x = `Category`, y = `Calories`)) +
geom_boxplot() +
labs(title="Calories for different food categories") +
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5))
p
df6 <- df4 %>% filter(Category == "Seeds and Nuts")
head(df6)
p <- ggplot(data = df6, aes(x = Food, y = Calories)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Average of calories from different Food and Nuts items") +
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5))
p
p <- ggplot(data=df6, aes(x = "", y = Calories, fill = Food)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Average of calories from different Food and Nuts items") +
theme_void() # remove background, grid, numeric labels
p
df4[df4$Calories == max(df4$Calories),]
df4[df4$Calories == min(df4$Calories),]
med_val <- median(df4$Calories)
med_val
sum(df4$Calories > med_val)
df7 <- df4 %>%
filter(Calories >  med_val) %>%
arrange(desc(Calories))
df7
df1 %>%
filter(Calories == "8-44")
#df1[df1$Calories == "8-44", ]
sum(is.na(df1$Calories))
df1 %>%
filter(Calories == is.na())
df1 %>%
filter(is.na(Calories))
#df1[is.na(df1$Calories), ]
df1 %>%
summarise(missing_calories = sum(is.na(Calories)))
#sum(is.na(df1$Calories))
df2 <- df1 %>%
filter(!Calories == "8-44")
df2 %>%
filter(Calories == "8-44")
df3 <- df2 %>%
filter(!Food == "Frozen peas")
df3 %>%
filter(Food == "Frozen peas")
df4 <- df3 %>%
mutate(Calories = as.numeric(gsub(",", "", Calories))) #gsub will remove the comma's.
head(df4)
df5 <- df4 %>%
group_by(Category) %>%
select(4) %>%
summarize_each(funs(mean))
df5
df5 <- df4 %>%
group_by(Category) %>%
summarise(across(Calories, mean))
df5
p <- df5 %>% ggplot(aes(x = Category, y = Calories)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Average of calories from different categories") +
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5))
p
p <- df4 %>%
ggplot(aes(x = `Category`, y = `Calories`)) +
geom_boxplot() +
labs(title="Calories for different food categories") +
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5))
p
df6 <- df4 %>%
filter(Category == "Seeds and Nuts")
head(df6)
p <- df6 %>%
ggplot(aes(x = Food, y = Calories)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Average of calories from different Food and Nuts items") +
theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5))
p
p <- df6 %>%
ggplot(aes(x = "", y = Calories, fill = Food)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Average of calories from different Food and Nuts items") +
theme_void() # remove background, grid, numeric labels
p
df4 %>%
filter(Calories == max(Calories))
df4 %>%
filter(Calories == min(Calories))
med_val <- df4 %>%
summarise(med_val = median(Calories)) %>%
pull(med_val)
med_val
sum(df4$Calories > med_val)
med_val <- df4 %>%
summarise(med_val = median(Calories, na.rm = TRUE)) %>%
pull(med_val)
med_val
df4 %>%
summarise(count_above_median = sum(Calories > med_val))
df7 <- df4 %>%
filter(Calories >  med_val) %>%
arrange(desc(Calories))
df7
library(tidyverse)
folder <- "data"
file_name <- "zomato.csv"
file_path <- paste0("../", folder, "/", file_name) # ../ betekent eerst een directory hoger
df1 <- read_csv(file_path)
head(df1)
dim(df1)
dim(drop_na(df1))
df1 %>%
summarise(mean_high = mean(High))
df2 <- df1 %>%
pivot_longer(c("High", "Low"), names_to = "Type", values_to = "Price")
head(df2)
p <- df2 %>%
ggplot(aes(x = Date, y = Price, group = `Type`)) +
geom_line(aes(color = `Type`)) +
labs(title="Zoamto Stock Price")
p
high <- summary(df1$High)
low <- summary(df1$Low)
index <- c(1, 3, 6)
df3 <- tibble("Measurement" = c("Minimum", "Median", "Maximum"),
"low" = as.vector(low[index]),
"high" = as.vector(high[index]))
df3
df4 <- df3 %>%
pivot_longer(c("low", "high"), names_to = "low or high", values_to = "Stock Price")
df4
df4 <- df4 %>%
mutate(Measurement = factor(Measurement,
levels = c("Minimum", "Median", "Maximum"),
ordered = TRUE))
df4
df4 <- df4 %>%
mutate(`low or high` = factor(`low or high`, levels = c("low", "high")))
df4
p <- ggplot(data = df4, aes(x = Measurement, y = `Stock Price`, fill = `low or high`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Minimum, Median and maximum Stockprice") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- df4 %>%
ggplot(aes(x = Measurement, y = `Stock Price`, fill = `low or high`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Minimum, Median and maximum Stockprice") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- df4 %>%
ggplot(aes(x = Measurement, y = `Stock Price`, fill = `low or high`)) +
geom_bar(stat = "identity", position="dodge") +
labs(title="Minimum, Median and maximum Stockprice") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
