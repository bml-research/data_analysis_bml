my_col_names <- c("gene", "chromosome", "mol_weight_kD")
names(my_df) <- my_col_names
formatted_table(head(my_df))
my_col_names <- c("gene", "chromosome", "mol_weight_kD")
file_path <- "./files_03_data_import/file03_genes.csv"
my_df <- read_csv2(file_path, col_names = my_col_names)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file04_genes.csv"
my_df <- read_csv2(file_path)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file04_genes.csv"
my_df <- read_csv(file_path)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file05_genes.csv"
my_df <- read_tsv(file_path, locale = locale(decimal_mark = ","))
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file06_genes.csv"
my_df <- read_csv2(file_path)
formatted_table(head(my_df))
file_path <- "./files_03_data_import/file06_genes.csv"
my_df <- read_delim(file_path, delim = "*", comment = "@", locale=locale(decimal_mark = ","))
formatted_table(head(my_df))
str(my_df)
gene <- c("AAAS", "ABAT", "ABCC2", "ABL1","FMR1")
chromosome <- c(12, 16, 10, 9, "X")
mol_weight_kD <- c(52.5, 56.4, 174.2, 122.9, 71.1)
my_tibble <- tibble(gene, chromosome, mol_weight_kD)
write_csv(my_tibble, "./files_03_data_import/file07_genes_tibble.csv")
my_path <- "./files_03_data_import/file07_genes_tibble.csv"
my_df <- read_csv(my_path)
formatted_table(head(my_df))
library(readxl)
file_path <- "./files_03_data_import/file08_human_genes.xlsx"
my_df <- read_excel(file_path)
formatted_table(head(my_df))
library(openxlsx)
gene <- c("AAAS", "ABAT", "ABCC2", "ABL1","FMR1")
chromosome <- c(12, 16, 10, 9, "X")
mol_weight_kD <- c(52.5, 56.4, 174.2, 122.9, 71.1)
my_tibble <- tibble(gene, chromosome, mol_weight_kD)
write.xlsx(my_tibble, './files_03_data_import/file09_genes_tibble.xlsx')
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
getwd()
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
library(tidyverse)
library(tidyverse)
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
data_rotated <- data_wide %>%
# STEP 1: Add a unique Row ID (e.g., Row 1, Row 2)
# This column will become the new headers.
mutate(Row_ID = paste0("Row_", row_number())) %>%
# STEP 2: Pivot to a LONGER format
# We stack all original columns (Gene, Chr, Len)
pivot_longer(
cols = c(Gene, Chr, Len),
names_to = "Variable", # The original column names
values_to = "Value"    # The original values
) %>%
# STEP 3: Pivot to a WIDER format
# We use the Row_ID (Row_1, Row_2) to create new columns,
# and the Value column populates them.
pivot_wider(
names_from = Row_ID,
values_from = Value
)
print("Rotated Tibble:")
data_rotated
data_rotated <- my_tibble %>%
# STEP 1: Add a unique Row ID (e.g., Row 1, Row 2)
# This column will become the new headers.
mutate(Row_ID = paste0("Row_", row_number())) %>%
# STEP 2: Pivot to a LONGER format
# We stack all original columns (Gene, Chr, Len)
pivot_longer(
cols = c(Gene, Chr, Len),
names_to = "Variable", # The original column names
values_to = "Value"    # The original values
) %>%
# STEP 3: Pivot to a WIDER format
# We use the Row_ID (Row_1, Row_2) to create new columns,
# and the Value column populates them.
pivot_wider(
names_from = Row_ID,
values_from = Value
)
print("Rotated Tibble:")
data_rotated
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
data_rotated <- my_tibble %>%
# STEP 1: Add a unique Row ID (e.g., Row 1, Row 2)
# This column will become the new headers.
mutate(Row_ID = paste0("Row_", row_number())) %>%
# STEP 2: Pivot to a LONGER format
# We stack all original columns (Gene, Chr, Len)
pivot_longer(
cols = c(Gene, Chr, Len),
names_to = "Variable", # The original column names
values_to = "Value"    # The original values
) %>%
# STEP 3: Pivot to a WIDER format
# We use the Row_ID (Row_1, Row_2) to create new columns,
# and the Value column populates them.
pivot_wider(
names_from = Row_ID,
values_from = Value
)
data_rotated <- my_tibble %>%
# STEP 1: Add a unique Row ID (e.g., Row 1, Row 2)
# This column will become the new headers.
mutate(Row_ID = paste0("Row_", row_number())) %>%
data_rotated
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
data_rotated <- my_tibble %>%
# STEP 1: Add a unique Row ID (e.g., Row 1, Row 2)
# This column will become the new headers.
mutate(Row_ID = paste0("Row_", row_number())) %>%
data_rotated
data_rotated <- my_tibble %>%
# STEP 1: Add a unique Row ID (e.g., Row 1, Row 2)
# This column will become the new headers.
mutate(Row_ID = paste0("Row_", row_number()))
data_rotated
my_tiblle$colnames <- c("gene", " len", "kD")
data_rotated
my_tibble$colnames <- c("gene", " len", "kD")
my_tibble
rotated_tibble <- my_tibble %>%
# 1. Pivot LONGER: Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = everything(), # Target all columns
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
) %>%
# 2. UNNEST: Convert the list column (Data_Vector) into separate rows
#    Each element of the vector is moved to its own row.
unnest(Data_Vector) %>%
# 3. Add Row ID: Identify which element (Gene, Chromosome, or Length) it is
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
ungroup() %>%
# 4. Pivot WIDER: Move the 3 data elements into their final columns
pivot_wider(
names_from = Row_ID,
values_from = Data_Vector
) %>%
# 5. Clean up names and types
rename(
Gene = `1`,
Chromosome = `2`,
Length_kb = `3`
) %>%
# Clean up the ID column and convert Length to numeric
mutate(
Record_ID = str_remove(Record_ID, "record_"),
Length_kb = as.numeric(Length_kb)
)
print(rotated_tibble)
library(tidyverse)
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
rotated_tibble <- my_tibble %>%
# 1. Pivot LONGER: Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with = record_, # Target all columns
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
) %>%
# 2. UNNEST: Convert the list column (Data_Vector) into separate rows
#    Each element of the vector is moved to its own row.
unnest(Data_Vector) %>%
# 3. Add Row ID: Identify which element (Gene, Chromosome, or Length) it is
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
ungroup() %>%
# 4. Pivot WIDER: Move the 3 data elements into their final columns
pivot_wider(
names_from = Row_ID,
values_from = Data_Vector
) %>%
# 5. Clean up names and types
rename(
Gene = `1`,
Chromosome = `2`,
Length_kb = `3`
) %>%
# Clean up the ID column and convert Length to numeric
mutate(
Record_ID = str_remove(Record_ID, "record_"),
Length_kb = as.numeric(Length_kb)
)
print(rotated_tibble)
rotated_tibble <- my_tibble %>%
# 1. Pivot LONGER: Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with = record_, # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
rotated_tibble
stacked_tibble <- my_tibble %>%
# 1. Pivot LONGER: Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with = record_, # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
stacked_tibble <- my_tibble %>%
# 1. Pivot LONGER: Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with = record_, # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with = record_, # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with(record_), # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with("record_"), # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with("record_"), # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
rotated_tibble <- stacked_tibble %>% unnest(Data_Vector)
rotated_tibble
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with("record_"), # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
rotated_tibble <- stacked_tibble %>%
unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
ungroup()
rotated_tibble
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with("record_"), # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
rotated_tibble <- stacked_tibble %>%
#unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
ungroup()
rotated_tibble
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with("record_"), # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
rotated_tibble <- stacked_tibble %>%
#unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
#ungroup()
rotated_tibble
rotated_tibble <- stacked_tibble %>%
#unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
#ungroup()
rotated_tibble
rotated_tibble <- stacked_tibble %>%
#unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) #%>%
#ungroup()
rotated_tibble
rowid_tibble <- stacked_tibble %>%
#unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) #%>%
#ungroup()
row_id_tibble
rowid_tibble <- stacked_tibble %>%
#unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) #%>%
#ungroup()
rowid_tibble
tibble_wide <- rowid_tibble %>% pivot_wider(names_from = Row_ID, values_from = Data_Vector)
tibble_wide
rotated_tibble <- tibble_wide %>%
colnames <- c("Gene", "Chromosome", "Mol_weight_KD")
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`)
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) %>%
select(c(2, 3, 4))
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) %>%
select(-Record_ID)
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) %>%
#select(-Record_ID)
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) #%>%
#select(-Record_ID)
rotated_tibble
rowid_tibble <- stacked_tibble %>%
#unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
ungroup()
rowid_tibble
tibble_wide <- rowid_tibble %>% pivot_wider(names_from = Row_ID, values_from = Data_Vector)
tibble_wide
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) #%>%
select(-Record_ID)
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) #%>%
select(-`Record_ID`)
rotated_tibble
library(tidyverse)
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with("record_"), # Target all columns that start with record_
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2"))
)
stacked_tibble
rowid_tibble <- stacked_tibble %>%
#unnest(Data_Vector) %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
ungroup()
rowid_tibble
tibble_wide <- rowid_tibble %>% pivot_wider(names_from = Row_ID, values_from = Data_Vector)
tibble_wide
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) #%>%
select(-Record_ID)
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) #%>%
select(-Record_ID)
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) %>%
select(-Record_ID)
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) %>%
select(-Record_ID) %>%
mutate(as.numeric(Mol_weight_KD))
rotated_tibble
rotated_tibble <- tibble_wide %>%
rename(Gene = `1`, Chromosome = `2`, Mol_weight_KD = `3`) %>%
select(-Record_ID) %>%
mutate(Mol_weight_KD = as.numeric(Mol_weight_KD))
rotated_tibble
library(tidyverse)
record_1 <- c("AAAS", "12", "52.2")
record_2 <- c("ABAT", "16", "56.4")
record_3 <- c("ABCC2", "10", "174.2")
record_4 <- c("ABL1", "9", "122.9")
record_5 <- c("FMR1", "X", "71.1")
my_tibble <- tibble(record_1, record_2, record_3, record_4, record_5)
my_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with("record_"), # Target all columns that start with record_. We can also use cols = everything() here.
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2")). So basically all the data goes in here.
)
stacked_tibble
rowid_tibble <- stacked_tibble %>%
group_by(Record_ID) %>%
mutate(Row_ID = row_number()) %>%
ungroup()
rowid_tibble
rowid_tibble <- stacked_tibble %>%
group_by(Record_ID) %>% # create groups by the record ID
mutate(Row_ID = row_number()) %>% #resets the count for the first row of each group
#ungroup()
rowid_tibble
stacked_tibble <- my_tibble %>%
# Stack the 5 columns (record_1 to record_5)
pivot_longer(
cols = starts_with("record_"), # Target all columns that start with record_. We can also use cols = everything() here.
names_to = "Record_ID", # New column for the original names (e.g., "record_1")
values_to = "Data_Vector" # New column containing the entire vector (e.g., c("AAAS", "12", "52.2")). So basically all the data goes in here.
)
stacked_tibble
rowid_tibble <- stacked_tibble %>%
group_by(Record_ID) %>% # create groups by the record ID
mutate(Row_ID = row_number()) %>% #resets the count for the first row of each group
#ungroup()
rowid_tibble
rowid_tibble <- stacked_tibble %>%
group_by(Record_ID) %>% # create groups by the record ID
mutate(Row_ID = row_number()) #%>% #resets the count for the first row of each group
#ungroup()
rowid_tibble
rowid_tibble <- stacked_tibble %>%
group_by(Record_ID) %>% # create groups by the record ID
mutate(Row_ID = row_number()) %>% #resets the count for the first row of each group
ungroup()
rowid_tibble
