labs(title="Weights of different genotypes of mice")
p
p <- ggplot(data= tidy_mouse_weight, aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line(aes(color = `Mouse strain`)) +
labs(title="Weights of different genotypes of mice")
p
chickwts_diet1 <- ChickWeight %>% filter(Diet == 1)
formatted_table(head(chickwts_diet1))
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weight")
p
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth") +
geom_smooth(method="lm")
p
library(readxl)
file_path <- "./files_12_data_visualization/file04_bubble_chart.xlsx"
bubble_data <- read_excel(file_path)
formatted_table(head(bubble_data))
p <- ggplot(bubble_data, aes(x = `Analysis time (min)`, y = `Protein concentration (mg/ml)`)) +
geom_point(aes(color = Method, size = `Number of Analyses per day`), alpha = 0.5) +
scale_size_area(max_size = 10)
p
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
# Path to the uploaded CSV (keep as-is)
csv_path <- "/mnt/data/file01_anage_data (1).csv"
# Read file (readr handles many CSV quirks)
df <- readr::read_csv(csv_path, guess_max = 2000)
# Path to the uploaded CSV (keep as-is)
csv_path <- "file01_anage_data (1).csv"
# Read file (readr handles many CSV quirks)
df <- readr::read_csv(csv_path, guess_max = 2000)
# Show a quick preview of column names and first rows for debugging
cat("Columns found:\n")
print(names(df))
cat("\nFirst 6 rows:\n")
print(utils::head(df, 6))
# Try to detect species column
species_patterns <- c("species", "sp\b", "taxon", "breed", "genus", "species_name")
species_col <- NA
for (pat in species_patterns) {
hits <- grep(pat, names(df), ignore.case = TRUE, value = TRUE)
if (length(hits) > 0) { species_col <- hits[1]; break }
}
# Try to detect birth weight column
weight_patterns <- c("birth.*weight", "birthweight", "weight", "mass", "bw", "birth_wt")
weight_col <- NA
for (pat in weight_patterns) {
hits <- grep(pat, names(df), ignore.case = TRUE, value = TRUE)
if (length(hits) > 0) { weight_col <- hits[1]; break }
}
# If detection failed, fall back to commonly used column positions
if (is.na(species_col) && ncol(df) >= 1) species_col <- names(df)[1]
if (is.na(weight_col) && ncol(df) >= 2) weight_col <- names(df)[2]
cat(sprintf("Using species column: '%s'\nUsing weight column: '%s'\n", species_col, weight_col))
# Create a working tibble
plot_df <- df %>%
dplyr::select(all_of(c(species_col, weight_col))) %>%
stats::setNames(c("species", "birth_weight")) %>%
mutate(birth_weight = as.numeric(birth_weight)) %>%
filter(!is.na(birth_weight) & !is.na(species)) %>%
mutate(species = as.factor(species))
# Path to the uploaded CSV (keep as-is)
csv_path <- "file01_anage_data (1).csv"
# Read file (readr handles many CSV quirks)
df <- readr::read_csv2(csv_path, guess_max = 2000)
# Show a quick preview of column names and first rows for debugging
cat("Columns found:\n")
print(names(df))
cat("\nFirst 6 rows:\n")
print(utils::head(df, 6))
# Try to detect species column
species_patterns <- c("species", "sp\b", "taxon", "breed", "genus", "species_name")
species_col <- NA
for (pat in species_patterns) {
hits <- grep(pat, names(df), ignore.case = TRUE, value = TRUE)
if (length(hits) > 0) { species_col <- hits[1]; break }
}
# Try to detect birth weight column
weight_patterns <- c("birth.*weight", "birthweight", "weight", "mass", "bw", "birth_wt")
weight_col <- NA
for (pat in weight_patterns) {
hits <- grep(pat, names(df), ignore.case = TRUE, value = TRUE)
if (length(hits) > 0) { weight_col <- hits[1]; break }
}
# If detection failed, fall back to commonly used column positions
if (is.na(species_col) && ncol(df) >= 1) species_col <- names(df)[1]
if (is.na(weight_col) && ncol(df) >= 2) weight_col <- names(df)[2]
cat(sprintf("Using species column: '%s'\nUsing weight column: '%s'\n", species_col, weight_col))
# Create a working tibble
plot_df <- df %>%
dplyr::select(all_of(c(species_col, weight_col))) %>%
stats::setNames(c("species", "birth_weight")) %>%
mutate(birth_weight = as.numeric(birth_weight)) %>%
filter(!is.na(birth_weight) & !is.na(species)) %>%
mutate(species = as.factor(species))
cat(sprintf("Rows retained for plotting: %d\n", nrow(plot_df)))
if (nrow(plot_df) == 0) stop("No usable rows found for plotting. Check column detection and data types.")
p <- ggplot(plot_df, aes(x = species, y = birth_weight)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.15, alpha = 0.6, size = 1.5) +
labs(title = "Birth weight by feline species",
x = "Species",
y = "Birth weight (units as in CSV)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(p)
# Save a copy of the plot
ggplot2::ggsave("feline_birthweight_boxplot.png", plot = p, width = 10, height = 6, units = "in")
cat("Saved plot to 'feline_birthweight_boxplot.png' in the working directory.\n")
library(knitr)
library(kableExtra)
library(pillar)
formatted_table_with_types <- function(df) {
col_types <- sapply(df, pillar::type_sum)
new_col_names <- paste0(names(df), "<br>", "<span style='font-weight: normal;'>", col_types, "</span>")
kbl(df,
col.names = new_col_names,
escape = FALSE, # This is crucial to allow the <br> tag to work
format = "html" # Ensure HTML format, although often auto-detected
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
library(tidyverse)
df <- read_csv("nse.csv")
formatted_table(df)
library(knitr)
library(kableExtra)
library(pillar)
formatted_table <- function(df) {
col_types <- sapply(df, pillar::type_sum)
new_col_names <- paste0(names(df), "<br>", "<span style='font-weight: normal;'>", col_types, "</span>")
kbl(df,
col.names = new_col_names,
escape = FALSE, # This is crucial to allow the <br> tag to work
format = "html" # Ensure HTML format, although often auto-detected
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
df <- read_csv("nse.csv")
formatted_table(df)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(knitr)
library(kableExtra)
library(pillar)
formatted_table <- function(df) {
col_types <- sapply(df, pillar::type_sum)
new_col_names <- paste0(names(df), "<br>", "<span style='font-weight: normal;'>", col_types, "</span>")
kbl(df,
col.names = new_col_names,
escape = FALSE, # This is crucial to allow the <br> tag to work
format = "html" # Ensure HTML format, although often auto-detected
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
library(tidyverse)
library(knitr)
library(kableExtra)
library(pillar)
formatted_table <- function(df) {
col_types <- sapply(df, pillar::type_sum)
new_col_names <- paste0(names(df), "<br>", "<span style='font-weight: normal;'>", col_types, "</span>")
kbl(df,
col.names = new_col_names,
escape = FALSE, # This is crucial to allow the <br> tag to work
format = "html" # Ensure HTML format, although often auto-detected
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_09_data_analysis/file01_dementia_patients_health_data.csv"
df <- read_csv(file_path)
formatted_table(head(df))
formatted_table(df[2, ]) #select second row
formatted_table(head(df[, 8])) #select eighth column
head(df$Prescription) #select column Prescription
formatted_table(slice(df, 1))
formatted_table(slice(df, 1:5))
formatted_table(slice(df, 2:5))
formatted_table(slice_head(df, n=5))
formatted_table(slice_tail(df, n=5))
formatted_table(slice_max(df, order_by = AlcoholLevel, n=1))
formatted_table(df[df$AlcoholLevel == max(df$AlcoholLevel), ])
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
file_path <- "./files_12_data_visualization/file02_radar_data.csv"
rest_data <- read.csv2(file_path, check.names = F)
formatted_table(rest_data)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(pillar)
formatted_table <- function(df) {
col_types <- sapply(df, pillar::type_sum)
new_col_names <- paste0(names(df), "<br>", "<span style='font-weight: normal;'>", col_types, "</span>")
kbl(df,
col.names = new_col_names,
escape = FALSE, # This is crucial to allow the <br> tag to work
format = "html" # Ensure HTML format, although often auto-detected
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_12_data_visualization/file01_anage_data.csv"
df <- read.csv2(file_path, check.names = F)
df <- df %>% mutate(`Adult weight (g)` = as.numeric(`Adult weight (g)`)) %>%
mutate(`Birth weight (g)` = as.numeric(`Birth weight (g)`))
formatted_table(head(df))
feline_df <- df[df$Family == "Felidae",]
summ_data <- feline_df %>%
arrange(`Common name`) %>%
select(Family, `Common name`, `Birth weight (g)`, `Adult weight (g)`)
# Unfortunatly, this results in a data frame with only characters. The next lines are used to convert the last two columns to numbers
summ_data <- summ_data  %>%
mutate(`Birth weight (g)` = as.numeric(`Birth weight (g)`)) %>%
mutate(`Adult weight (g)` = as.numeric(`Adult weight (g)`))
formatted_table(summ_data)
summ_data <- summ_data %>%
drop_na()
formatted_table(summ_data)
barplot(summ_data$`Birth weight (g)`,
ylab = "Birth weight (g)",
ylim = c(0, max(summ_data$`Birth weight (g)` + 100)),
names = summ_data$`Common name`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Birth weight for different cat species")
p <- ggplot(data = summ_data, aes(x = `Common name`, y = `Birth weight (g)`)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Birth weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data <- summ_data %>%
pivot_longer(c(`Birth weight (g)`, `Adult weight (g)`), names_to = "Weight type", values_to = "Weight (g)")
formatted_table(head(tidy_summ_data))
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="dodge") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species", y = "Weight (g)") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="stack") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="fill") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data$`Weight type` <- factor(tidy_summ_data$`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)"))
levels(tidy_summ_data$`Weight type`)
tidy_summ_data
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="dodge") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="stack") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="fill") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
big_cats <- c("Lion", "Tiger", "Jaguar", "Cougar", "Leopard", "Cheetah", "Snow leopard")
df_big_cats <- df %>% filter(`Common name`%in% big_cats)
formatted_table(df_big_cats)
p <- ggplot(df_big_cats, aes(x = "", y = `Adult weight (g)`, fill = `Common name`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Adult weight for different cat species") +
theme_void() # remove background, grid, numeric labels
p
file_path <- "./files_12_data_visualization/file02_radar_data.csv"
rest_data <- read.csv2(file_path, check.names = F)
formatted_table(rest_data)
trans_matrix <- t(rest_data)
formatted_table((trans_matrix))
View(rest_data)
trans_matrix <- t(rest_data)
formatted_table(trans_matrix)
View(trans_matrix)
trans_matrix <- t(rest_data)
trans_matrix
trans_matrix <- t(rest_data)
formatted_table((trans_matrix))
trans_matrix <- t(rest_data)
trans_matrix
trans_tibble <- tibble(data.frame(trans_matrix))
formatted_table((trans_tibble))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(pillar)
formatted_table <- function(df) {
col_types <- sapply(df, pillar::type_sum)
new_col_names <- paste0(names(df), "<br>", "<span style='font-weight: normal;'>", col_types, "</span>")
kbl(df,
col.names = new_col_names,
escape = FALSE, # This is crucial to allow the <br> tag to work
format = "html" # Ensure HTML format, although often auto-detected
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "responsive"))
}
file_path <- "./files_12_data_visualization/file01_anage_data.csv"
df <- read.csv2(file_path, check.names = F)
df <- df %>% mutate(`Adult weight (g)` = as.numeric(`Adult weight (g)`)) %>%
mutate(`Birth weight (g)` = as.numeric(`Birth weight (g)`))
formatted_table(head(df))
feline_df <- df[df$Family == "Felidae",]
summ_data <- feline_df %>%
arrange(`Common name`) %>%
select(Family, `Common name`, `Birth weight (g)`, `Adult weight (g)`)
# Unfortunatly, this results in a data frame with only characters. The next lines are used to convert the last two columns to numbers
summ_data <- summ_data  %>%
mutate(`Birth weight (g)` = as.numeric(`Birth weight (g)`)) %>%
mutate(`Adult weight (g)` = as.numeric(`Adult weight (g)`))
formatted_table(summ_data)
summ_data <- summ_data %>%
drop_na()
formatted_table(summ_data)
barplot(summ_data$`Birth weight (g)`,
ylab = "Birth weight (g)",
ylim = c(0, max(summ_data$`Birth weight (g)` + 100)),
names = summ_data$`Common name`,
las = 2,
cex.names = 0.5,
col = "steelblue",
main = "Birth weight for different cat species")
p <- ggplot(data = summ_data, aes(x = `Common name`, y = `Birth weight (g)`)) +
geom_bar(stat="identity", fill="steelblue") +
labs(title="Birth weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data <- summ_data %>%
pivot_longer(c(`Birth weight (g)`, `Adult weight (g)`), names_to = "Weight type", values_to = "Weight (g)")
formatted_table(head(tidy_summ_data))
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="dodge") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species", y = "Weight (g)") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="stack") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="fill") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_summ_data$`Weight type` <- factor(tidy_summ_data$`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)"))
levels(tidy_summ_data$`Weight type`)
tidy_summ_data
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="dodge") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="stack") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
p <- ggplot(data = tidy_summ_data, aes(x = `Common name`, y = `Weight (g)`, fill = `Weight type`)) +
geom_bar(stat = "identity", position="fill") +
scale_y_log10() +
labs(title="Birth and adult weight for different cat species") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
big_cats <- c("Lion", "Tiger", "Jaguar", "Cougar", "Leopard", "Cheetah", "Snow leopard")
df_big_cats <- df %>% filter(`Common name`%in% big_cats)
formatted_table(df_big_cats)
p <- ggplot(df_big_cats, aes(x = "", y = `Adult weight (g)`, fill = `Common name`)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title="Adult weight for different cat species") +
theme_void() # remove background, grid, numeric labels
p
file_path <- "./files_12_data_visualization/file02_radar_data.csv"
rest_data <- read.csv2(file_path, check.names = F)
formatted_table(rest_data)
trans_matrix <- t(rest_data)
trans_matrix
trans_tibble <- tibble(data.frame(trans_matrix))
formatted_table((trans_tibble))
colnames(trans_tibble) <- trans_tibble[1, ] # first row will be column names
trans_tibble <- trans_tibble[-1, ] # delete first row
trans_tibble <- trans_tibble %>%
mutate(across(everything(), as.numeric)) %>% # make all columns numeric
mutate(Sample = c("Sample 1", "Sample 2", "Sample 3"), .before=1)
formatted_table(trans_tibble)
rest_data_scaled <- trans_tibble[, -1]/1000
formatted_table(rest_data_scaled)
first_col <- trans_tibble[, 1]
formatted_table(first_col)
rest_data <- cbind(first_col, rest_data_scaled)
formatted_table(rest_data)
library(ggradar)
p <- ggradar(rest_data,  legend.text.size = 8, values.radar = c("0", "500", "1000"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Different protein quantifications methods compared") +
theme(plot.title = element_text(size = 14, ))
p
file_path <- "./files_12_data_visualization/file01_anage_data.csv"
df <- read.csv2(file_path, check.names = F)
artiod_df <- df[df$Order == "Artiodactyla",] %>%
arrange(`Common name`) %>%
select(Order, Family, `Common name`, `Maximum longevity (yrs)`, `Adult weight (g)`, `Birth weight (g)`)
artiod_df <- artiod_df %>% mutate(`Maximum longevity (yrs)` = as.numeric(`Maximum longevity (yrs)`)) %>%
mutate(`Adult weight (g)` = as.numeric(`Adult weight (g)`)) %>%
mutate(`Birth weight (g)` = as.numeric(`Birth weight (g)`))
artiod_df <- na.omit(artiod_df) # to remove rows with NA values
formatted_table(head(artiod_df))
p <- ggplot(artiod_df, aes(x = `Family`, y = `Maximum longevity (yrs)`)) +
geom_boxplot() +
labs(title="Boxplot showing maximum life span for different orders in mammals") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_artiod <- artiod_df %>%
pivot_longer(c(`Birth weight (g)`, `Adult weight (g)`), names_to = "Weight type", values_to = "Weight (g)")
formatted_table(head(tidy_artiod))
p <- ggplot(tidy_artiod, aes(x = `Family`, y = `Weight (g)`, fill = `Weight type`)) +
geom_boxplot() +
scale_y_log10() +
labs(title="Box plot showing the birth and adult weights for different orders in Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
tidy_artiod$`Weight type` <- factor(tidy_artiod$`Weight type`, levels = c("Birth weight (g)", "Adult weight (g)"))
levels(tidy_artiod$`Weight type`)
p <- ggplot(tidy_artiod, aes(x = `Family`, y = `Weight (g)`, fill = `Weight type`)) +
geom_boxplot() +
scale_y_log10() +
labs(title="Box plot showing the birth and adult weights for different orders in Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
artiod_df <- artiod_df[artiod_df$Family != "Antilocapridae", ]
p <- ggplot(artiod_df, aes(x = `Family`, y = `Maximum longevity (yrs)`)) +
geom_violin() +
labs(title="Maximum life span of Artiodactyla") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
p
library(readxl)
file_path <- "./files_12_data_visualization/file_03_mouse_weight_data.xlsx"
mouse_weight <- read_excel(file_path)
formatted_table(head(mouse_weight))
tidy_mouse_weight <- mouse_weight %>%
pivot_longer(c(`Wild-type`, `OB/OB`, `DB/DB`), names_to = "Mouse strain", values_to = "Weight (g)")
formatted_table(head(tidy_mouse_weight))
p <- ggplot(data = tidy_mouse_weight, aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line() +
labs(title="Weights of different genotypes of mice")
p
p <- ggplot(data= tidy_mouse_weight, aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line(aes(linetype = `Mouse strain`)) +
labs(title="Weights of different genotypes of mice")
p
p <- ggplot(data= tidy_mouse_weight, aes(x = Date, y = `Weight (g)`, group = `Mouse strain`)) +
geom_line(aes(color = `Mouse strain`)) +
labs(title="Weights of different genotypes of mice")
p
chickwts_diet1 <- ChickWeight %>% filter(Diet == 1)
formatted_table(head(chickwts_diet1))
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weight")
p
p <- ggplot(chickwts_diet1, aes(x = Time, y = weight)) +
geom_point() +
labs(title="Chicken weigth") +
geom_smooth(method="lm")
p
library(readxl)
file_path <- "./files_12_data_visualization/file04_bubble_chart.xlsx"
bubble_data <- read_excel(file_path)
formatted_table(head(bubble_data))
p <- ggplot(bubble_data, aes(x = `Analysis time (min)`, y = `Protein concentration (mg/ml)`)) +
geom_point(aes(color = Method, size = `Number of Analyses per day`), alpha = 0.5) +
scale_size_area(max_size = 10)
p
p <- ggradar(rest_data,  legend.text.size = 8, values.radar = c("0", "0.5", "1.0"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Different protein quantifications methods compared") +
theme(plot.title = element_text(size = 14, ))
p
p <- ggradar(rest_data,  legend.text.size = 8, values.radar = c("0", "0.3", "0.6"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Different protein quantifications methods compared") +
theme(plot.title = element_text(size = 14, ))
p
p <- ggradar(rest_data,  legend.text.size = 8, values.radar = c("0", "0.5", "1.0"), axis.label.size = 3, grid.label.size = 3, legend.position = "right") +
labs(title = "Different protein quantifications methods compared") +
theme(plot.title = element_text(size = 14, ))
p
